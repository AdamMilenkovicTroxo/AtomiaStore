<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddToCart" xml:space="preserve">
    <value>Add to cart</value>
  </data>
  <data name="AvailablePackages" xml:space="preserve">
    <value>Available packages</value>
  </data>
  <data name="Domain" xml:space="preserve">
    <value>Domain</value>
  </data>
  <data name="DomainAvailableHoverTitle" xml:space="preserve">
    <value>is available.</value>
  </data>
  <data name="DomainNotAvailableHoverTitle" xml:space="preserve">
    <value>is not available.</value>
  </data>
  <data name="DomainRegDescription" xml:space="preserve">
    <value>Fill out the form below to order Domain name and Web hosting package. Please note that all fields marked with an asterisk (&lt;span class="required"&gt;*&lt;/span&gt;) are required.</value>
  </data>
  <data name="DomainRegResultsHeading" xml:space="preserve">
    <value>Results for</value>
  </data>
  <data name="Fee" xml:space="preserve">
    <value>Fee</value>
  </data>
  <data name="From" xml:space="preserve">
    <value>From</value>
  </data>
  <data name="HostingPackageDescription" xml:space="preserve">
    <value>Select desired Web hosting package. Please note that all fields marked with an asterisk (&lt;span class="required"&gt;*&lt;/span&gt;) are required.</value>
  </data>
  <data name="HostingPackageTitle" xml:space="preserve">
    <value>Web hosting package</value>
  </data>
  <data name="Item" xml:space="preserve">
    <value>Item</value>
  </data>
  <data name="MainDomain" xml:space="preserve">
    <value>Main domain</value>
  </data>
  <data name="MONTH" xml:space="preserve">
    <value>month</value>
  </data>
  <data name="MONTHPlural" xml:space="preserve">
    <value>months</value>
  </data>
  <data name="MoreResults" xml:space="preserve">
    <value>More results</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="OrderPageTitle" xml:space="preserve">
    <value>Order web hosting and DNS</value>
  </data>
  <data name="PricingVariantDisplay" xml:space="preserve">
    <value>{1} {2} - {0}</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="Select" xml:space="preserve">
    <value>Select</value>
  </data>
  <data name="ShoppingCart" xml:space="preserve">
    <value>Shopping cart</value>
  </data>
  <data name="ShoppingCartDescription" xml:space="preserve">
    <value>Items in your shopping cart can be removed.</value>
  </data>
  <data name="ShoppingCartEmpty" xml:space="preserve">
    <value>There are no items in the shopping cart.</value>
  </data>
  <data name="Subtotal" xml:space="preserve">
    <value>Subtotal</value>
  </data>
  <data name="Taken" xml:space="preserve">
    <value>Taken</value>
  </data>
  <data name="Tax" xml:space="preserve">
    <value>VAT</value>
  </data>
  <data name="Total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="YEAR" xml:space="preserve">
    <value>year</value>
  </data>
  <data name="YEARPlural" xml:space="preserve">
    <value>years</value>
  </data>
  <data name="RenewalPeriodDisplay" xml:space="preserve">
    <value>{0} {1}</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="MainDomainDescription" xml:space="preserve">
    <value>We will setup the services in your package to be connected with the selected main domain name.</value>
  </data>
  <data name="MainDomainOptionsCaption" xml:space="preserve">
    <value>Select main domain ...</value>
  </data>
  <data name="MainDomainRequiredWarning" xml:space="preserve">
    <value>You are required to add a main domain to your package. Please go back and add a domain name to the cart.</value>
  </data>
  <data name="Step3Description" xml:space="preserve">
    <value>Set up account info</value>
  </data>
  <data name="Step3Title" xml:space="preserve">
    <value>Account</value>
  </data>
  <data name="Step4Description" xml:space="preserve">
    <value>Invoice and payment options</value>
  </data>
  <data name="Step4Title" xml:space="preserve">
    <value>Checkout</value>
  </data>
  <data name="Step1Description" xml:space="preserve">
    <value>Buy new or move existing</value>
  </data>
  <data name="Step1Title" xml:space="preserve">
    <value>Domains</value>
  </data>
  <data name="Step2Description" xml:space="preserve">
    <value>Choose hosting package</value>
  </data>
  <data name="Step2Title" xml:space="preserve">
    <value>Hosting</value>
  </data>
  <data name="LanguageSelectorTitle" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="AccountTitle" xml:space="preserve">
    <value>Contact info</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="Address2" xml:space="preserve">
    <value>Address2</value>
  </data>
  <data name="BillingAddressTitle" xml:space="preserve">
    <value>Billing address</value>
  </data>
  <data name="BillingDifferentThanMain" xml:space="preserve">
    <value>Different billing address</value>
  </data>
  <data name="BillingSameAsMain" xml:space="preserve">
    <value>Same as contact info</value>
  </data>
  <data name="Change" xml:space="preserve">
    <value>Change</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="CompanyName" xml:space="preserve">
    <value>Company name</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="EmailRequired" xml:space="preserve">
    <value>Email is required.</value>
  </data>
  <data name="Fax" xml:space="preserve">
    <value>Fax</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>First name</value>
  </data>
  <data name="IndividualIdentityNumber" xml:space="preserve">
    <value>Personal ID no.</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Last name</value>
  </data>
  <data name="Mobile" xml:space="preserve">
    <value>Mobile</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>Phone</value>
  </data>
  <data name="Zip" xml:space="preserve">
    <value>Zip</value>
  </data>
  <data name="VatNumber" xml:space="preserve">
    <value>VAT number</value>
  </data>
  <data name="CompanyIdentityNumber" xml:space="preserve">
    <value>Corporate ID no.</value>
  </data>
  <data name="CustomerType" xml:space="preserve">
    <value>Customer type</value>
  </data>
  <data name="Company" xml:space="preserve">
    <value>Company</value>
  </data>
  <data name="Individual" xml:space="preserve">
    <value>Individual</value>
  </data>
</root>