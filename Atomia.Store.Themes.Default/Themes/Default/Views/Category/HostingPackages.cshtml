@using Atomia.Store.Core;
@using Atomia.Store.WebBase.HtmlHelpers;

@{
    Layout = "~/Themes/Default/Views/_MainLayout.cshtml";
    ViewBag.Title = @Html.CommonResource("HostingPackageTitle");
}

<h4>@Html.CommonResource("HostingPackageTitle")</h4>
<p>@Html.CommonResourceRaw("HostingPackageDescription")</p>
<div class="formrow">
    <h5><label class="required"><span>*</span> @Html.CommonResource("AvailablePackages"):</label></h5>
    <div class="col_set no_gutter" data-bind="foreach: HostingPackages.Products">
        <div class="col_3">
            <div class="card full-width stickers selectable" data-bind="css: { selected: IsInCart } ">
                <div class="card_content">
                    <h4 class="card_content_title" data-bind="text: Name"></h4>
                    <p class="card_content_description" data-bind="html: Description"></p>
                    <p class="card_sticker" data-bind="visible: HasVariants">
                        <label class="select" data-bind="attr: { for: UniqueId }">
                            <select data-bind="
                            options: PricingVariants,
                            optionsText: 'Display',
                            value: SelectedPricingVariant,
                            attr: {
                                name: UniqueId,
                                id: UniqueId
                            }"></select>
                        </label>
                    </p>
                    <p class="card_sticker" data-bind="visible: !HasVariants()">
                        <span class="card_sticker_big" data-bind="text: Price"></span>
                        <!-- ko if: RenewalPeriod -->
                        <span class="card_sticker_small" data-bind="text: RenewalPeriod().Display"></span>
                        <!-- /ko-->
                        <!-- ko ifnot: RenewalPeriod -->
                        <span class="card_sticker_small">&nbsp;</span>
                        <!-- /ko-->
                    </p>
                </div>
                <p class="card_buttons"><a id="app_01" href="javascript:void(0);" class="button green" data-bind="click: $root.HostingPackages.SelectProduct, css: { disabled: IsInCart }">@Html.CommonResource("Select")</a></p>
            </div>
        </div>
    </div>
    <br class="clear">
</div>


<h4>@Html.CommonResource("MainDomain")</h4>
<p>@Html.CommonResource("MainDomainDescription")</p>
<p class="warning" data-bind="visible: MainDomainStatus.DomainNameOptionsCount() === 0">@Html.CommonResource("MainDomainRequiredWarning")</p>
<div class="formrow">
    <h5>
        <label for="master" class="required">
            <span>* </span>@Html.CommonResource("MainDomain"):
        </label>
    </h5>
    <div class="col2row" data-bind="component: {
        name: 'domain-connection',
        params: {
            cart: Atomia.ActiveViewModel.Cart,
            selectedItem: Atomia.ActiveViewModel.HostingPackages.SelectedProduct,
            statusNotifier: Atomia.ActiveViewModel.MainDomainStatus
        }
    }">

    </div>
    <br class="clear">
</div>

<p class="actions" style="display: block;">
    @Html.RouteLink(Html.CommonResource("Back"), "Domains", null, new { id = "back_step", @class = "button large", style = "display: inline-block;" })
    @Html.RouteLink(Html.CommonResource("Next"), "Account", null, new { id = "next_step", @class = "button large green", data_bind = "visible: HostingPackages.AllowContinue() && MainDomainStatus.DomainNameHasBeenSelected()" })
</p>

@section scripts {
    @Scripts.Render("~/bundles/hostingpackages")

    <script type="text/javascript">
        var Atomia = Atomia || {};
        Atomia.ActiveViewModel = Atomia.ActiveViewModel || {};

        Atomia.ActiveViewModel.MainDomainStatus = new Atomia.ViewModels.DomainStatus();

        Atomia.ActiveViewModel.HostingPackages = new Atomia.ViewModels.ProductsListing();
        Atomia.ActiveViewModel.HostingPackages.Init(Atomia.ActiveViewModel.Cart, { SingleSelection: true });
        Atomia.ActiveViewModel.HostingPackages.Load(@Html.JsonAction("ListCategoryData", "Category", new { category = "Hosting" }));
    </script>

    @Html.Partial("_DomainConnection")
}