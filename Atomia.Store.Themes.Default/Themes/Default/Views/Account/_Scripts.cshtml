@model Atomia.Store.AspNetMvc.Models.DefaultAccountViewModel
@using Atomia.Store.AspNetMvc.Models;
@using Atomia.Web.Plugin.Validation.HtmlHelpers;

@{
    Html.EnableClientValidation();
    Html.AddCustomerValidationRules(new CustomerValidationOptions()
    {
        SubForms = new List<Form>()
            {
                new Form(formName: "MainContact", countryFormName:"MainContact"),
                new Form(formName: "MainContact.IndividualInfo", countryFormName:"MainContact"),
                new Form(formName: "MainContact.CompanyInfo", countryFormName:"MainContact"),
                new Form(formName: "BillingContact", countryFormName:"BillingContact"),
                new Form(formName: "BillingContact.IndividualInfo", countryFormName:"BillingContact"),
                new Form(formName: "BillingContact.CompanyInfo", countryFormName:"BillingContact")
            },
        ProductsChangedEvent = "Atomia.VM.cart.ValidationUpdateEvent",
        ArticleNumberList = "Atomia.VM.cart.articleNumbers()",
        ProductCategoryList = "Atomia.VM.cart.categories()"
    });
}

<script type="text/javascript">
    Atomia.VM.account = new Atomia.ViewModels.AccountModel();
    Atomia.VM.account.otherBillingContact(@Model.OtherBillingContact.ToString().ToLower());
    @{
        var initialMainContactCustomerType = string.IsNullOrEmpty(Model.MainContact.CustomerType) ? "individual" : Model.MainContact.CustomerType;
        var initialBillingCustomerType = string.IsNullOrEmpty(Model.BillingContact.CustomerType) ? "individual" : Model.BillingContact.CustomerType;
    }
    Atomia.VM.account.mainContactCustomerType('@initialMainContactCustomerType');
    Atomia.VM.account.billingContactCustomerType('@initialBillingCustomerType');
</script>
