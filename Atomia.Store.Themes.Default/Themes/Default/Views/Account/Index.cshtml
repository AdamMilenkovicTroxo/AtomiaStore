@model Atomia.Store.AspNetMvc.Models.DefaultAccountViewModel
@using Atomia.Web.Plugin.Validation.HtmlHelpers;

@{
    Layout = "~/Themes/Default/Views/_OrderFlowLayout.cshtml";
}

<div class="settingsboxinner">


    @using (Html.BeginForm("Index", "Account", FormMethod.Post, new { id = "Account_Form" }))
    {
        @Html.AntiForgeryToken()

        <h4>@Html.CommonResource("AccountTitle")</h4>

        @Html.Partial(Model.MainContact.PartialViewName, Model.MainContact, new ViewDataDictionary
        {
            TemplateInfo = new TemplateInfo { HtmlFieldPrefix = Model.MainContact.Id }
        })

        <h4>
            @Html.CommonResource("BillingAddressTitle")
            <span id="billing-text-open" data-bind="visible: !Account.OtherBillingContact()">
                (@Html.CommonResource("BillingSameAsMain") -
                <a id="billing-trigger-open" href="javascript:void(0);" data-bind="click: Account.UseOtherBillingContact">@Html.CommonResource("Change")</a>)
            </span>
            <span id="billing-text-close" style="display: none;" data-bind="visible: Account.OtherBillingContact">
                (@Html.CommonResource("BillingDifferentThanMain") -
                <a id="billing-trigger-close" href="javascript:void(0);" data-bind="click: Account.UseMainAsBillingContact">Make it same as contact info</a>)
            </span>
        </h4>

        <div id="billing" style="display: none;" data-bind="slideVisible: Account.OtherBillingContact">
            @Html.Partial(Model.BillingContact.PartialViewName, Model.BillingContact, new ViewDataDictionary
            {
                TemplateInfo = new TemplateInfo { HtmlFieldPrefix = Model.BillingContact.Id }
            })
        </div>

        <p class="actions" style="display: block;">
            @Html.RouteLink(Html.CommonResource("Back"), "Hosting", null, new { id = "back_step", @class = "button large", style = "display: inline-block;" })
            <button type="submit" class="button green" style="vertical-align:top;">@Html.CommonResource("Next")</button>
        </p>

        @Html.HiddenFor(m => m.OtherBillingContact, new { data_bind = "value: Account.OtherBillingContact" })
        
        @RenderSection("extraforms", required: false)
    }
</div>

@section scripts {
    @{
        Html.EnableClientValidation();
        Html.AddCustomerValidationRules(new CustomerValidationOptions()
        {
            SubForms = new List<Form>()
            {
                new Form("MainContact", "MainContact"),
                new Form("MainContact.IndividualInfo", "MainContact"),
                new Form("MainContact.CompanyInfo", "MainContact"),
                new Form("BillingContact", "BillingContact"),
                new Form("BillingContact.IndividualInfo", "BillingContact"),
                new Form("BillingContact.CompanyInfo", "BillingContact")
            },
            ProductsChangedEvent = "Atomia.VM.Cart.ValidationUpdateEvent",
            ArticleNumberList = "Atomia.VM.Cart.ArticleNumbers()",
            ProductCategoryList = "Atomia.VM.Cart.Categories()"
        });
    }

    <script type="text/javascript">
        Atomia.VM.Account = Atomia.ViewModels.CreateAccountModel();
        Atomia.VM.Account.OtherBillingContact(@Model.OtherBillingContact.ToString().ToLower());
        @{
            var initialMainContactCustomerType = string.IsNullOrEmpty(Model.MainContact.CustomerType) ? "individual" : Model.MainContact.CustomerType;
            var initialBillingCustomerType = string.IsNullOrEmpty(Model.BillingContact.CustomerType) ? "individual" : Model.BillingContact.CustomerType;
        }
        Atomia.VM.Account.MainContactCustomerType('@initialMainContactCustomerType');
        Atomia.VM.Account.BillingContactCustomerType('@initialBillingCustomerType');

        Atomia.VM.Progress.Step(3);
    </script>
}
