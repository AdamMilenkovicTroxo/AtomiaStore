@model Atomia.Store.AspNetMvc.Models.ProductListingViewModel

@{
    Layout = "~/Themes/Default/Views/_OrderFlowLayout.cshtml";
    ViewBag.Title = @Html.CommonResource("HostingPackageTitle");
}

<h4>@Html.CommonResource("HostingPackageTitle")</h4>
<p>@Html.CommonResourceRaw("HostingPackageDescription")</p>
<div class="formrow">
    <h5><label class="required"><span>*</span> @Html.CommonResource("AvailablePackages"):</label></h5>
    <!-- ko with: HostingPackages -->
    @Html.Partial("_CardListing")
    <!-- /ko -->
    <br class="clear">
</div>

<h4>@Html.CommonResource("ConnectedDomain")</h4>
<p>@Html.CommonResource("ConnectedDomainDescription")</p>
<p class="warning" data-bind="visible: ConnectedDomainStatus.DomainNameOptionsCount() === 0">@Html.CommonResource("ConnectedDomainRequiredWarning")</p>
<div class="formrow">
    <h5>
        <label for="master" class="required">
            <span>* </span>@Html.CommonResource("ConnectedDomain"):
        </label>
    </h5>
    <div class="col2row" data-bind="component: {
        name: 'domain-connection',
        params: {
            cart: Atomia.VM.Cart,
            selectedItem: Atomia.VM.HostingPackages.SelectedProduct,
            statusNotifier: Atomia.VM.ConnectedDomainStatus
        }
    }">

    </div>
    <br class="clear">
</div>

<p class="actions" style="display: block;">
    @Html.RouteLink(Html.CommonResource("Back"), "Domains", null, new { id = "back_step", @class = "button large", style = "display: inline-block;" })
    @Html.ActionLink(Html.CommonResource("Next"), "Index", "Account", null, new { id = "next_step", @class = "button large green", data_bind = "visible: HostingPackages.AllowContinue() && ConnectedDomainStatus.DomainNameHasBeenSelected()" })
</p>

@section scripts {
    <script type="text/javascript">
        var Atomia = Atomia || {};
        Atomia.VM = Atomia.VM || {};

        Atomia.VM.ConnectedDomainStatus = Atomia.ViewModels.CreateDomainStatusModel();

        Atomia.VM.HostingPackages = Atomia.ViewModels.CreateProductListingModel(Atomia.VM.Cart, { SingleSelection: true });
        Atomia.VM.HostingPackages.Load(@Html.JsonAction("GetData", "ProductListing", new { query = Model.Query }));

        Atomia.VM.Progress.Step(2);
    </script>

    @Html.Partial("_DomainConnection")
}